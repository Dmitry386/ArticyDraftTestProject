//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Articy.Dracula_articyXBasics;
using Articy.Unity;
using Articy.Unity.Interfaces;
using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;


namespace Articy.Dracula_articyXBasics.Features
{
    
    
    [Serializable()]
    public class CharacterInfoFeature : IArticyBaseObject, IPropertyProvider
    {
        
        [SerializeField()]
        private Boolean mPlayableCharacter = new Boolean();
        
        [SerializeField()]
        private ArticyValueArticyMultiLanguageString mBackground = new ArticyValueArticyMultiLanguageString();
        
        [SerializeField()]
        private ArticyValueArticyMultiLanguageString mMotivation = new ArticyValueArticyMultiLanguageString();
        
        [SerializeField()]
        private ArticyValueArticyMultiLanguageString mAppearance = new ArticyValueArticyMultiLanguageString();
        
        [SerializeField()]
        private ArticyValueArticyString mVoiceActor = new ArticyValueArticyString();
        
        [SerializeField()]
        private UInt64 mOwnerId;
        
        [SerializeField()]
        private UInt32 mOwnerInstanceId;
        
        public Boolean PlayableCharacter
        {
            get
            {
                return mPlayableCharacter;
            }
            set
            {
                var oldValue = mPlayableCharacter;
                mPlayableCharacter = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "CharacterInfo.PlayableCharacter", oldValue, mPlayableCharacter);
            }
        }
        
        public ArticyMultiLanguageString Background
        {
            get
            {
                return mBackground.GetValue();
            }
            set
            {
                mBackground.SetValue(value);
            }
        }
        
        public ArticyMultiLanguageString Motivation
        {
            get
            {
                return mMotivation.GetValue();
            }
            set
            {
                mMotivation.SetValue(value);
            }
        }
        
        public ArticyMultiLanguageString Appearance
        {
            get
            {
                return mAppearance.GetValue();
            }
            set
            {
                mAppearance.SetValue(value);
            }
        }
        
        public ArticyString VoiceActor
        {
            get
            {
                return mVoiceActor.GetValue();
            }
            set
            {
                mVoiceActor.SetValue(value);
            }
        }
        
        public UInt64 OwnerId
        {
            get
            {
                return mOwnerId;
            }
            set
            {
                mOwnerId = value;
            }
        }
        
        public UInt32 OwnerInstanceId
        {
            get
            {
                return mOwnerInstanceId;
            }
            set
            {
                mOwnerInstanceId = value;
            }
        }
        
        private void CloneProperties(object aClone, Articy.Unity.ArticyObject aFirstClassParent)
        {
            Articy.Dracula_articyXBasics.Features.CharacterInfoFeature newClone = ((Articy.Dracula_articyXBasics.Features.CharacterInfoFeature)(aClone));
            newClone.PlayableCharacter = PlayableCharacter;
            if ((mBackground != null))
            {
                newClone.mBackground = ((ArticyValueArticyMultiLanguageString)(mBackground.CloneObject(newClone, aFirstClassParent)));
            }
            if ((mMotivation != null))
            {
                newClone.mMotivation = ((ArticyValueArticyMultiLanguageString)(mMotivation.CloneObject(newClone, aFirstClassParent)));
            }
            if ((mAppearance != null))
            {
                newClone.mAppearance = ((ArticyValueArticyMultiLanguageString)(mAppearance.CloneObject(newClone, aFirstClassParent)));
            }
            if ((mVoiceActor != null))
            {
                newClone.mVoiceActor = ((ArticyValueArticyString)(mVoiceActor.CloneObject(newClone, aFirstClassParent)));
            }
            newClone.OwnerId = OwnerId;
        }
        
        public object CloneObject(object aParent, Articy.Unity.ArticyObject aFirstClassParent)
        {
            Articy.Dracula_articyXBasics.Features.CharacterInfoFeature clone = new Articy.Dracula_articyXBasics.Features.CharacterInfoFeature();
            CloneProperties(clone, aFirstClassParent);
            return clone;
        }
        
        #region property provider interface
        public void setProp(string aProperty, object aValue)
        {
            if ((aProperty == "PlayableCharacter"))
            {
                PlayableCharacter = System.Convert.ToBoolean(aValue);
                return;
            }
            if ((aProperty == "Background"))
            {
                Background = System.Convert.ToString(aValue);
                return;
            }
            if ((aProperty == "Motivation"))
            {
                Motivation = System.Convert.ToString(aValue);
                return;
            }
            if ((aProperty == "Appearance"))
            {
                Appearance = System.Convert.ToString(aValue);
                return;
            }
            if ((aProperty == "VoiceActor"))
            {
                VoiceActor = System.Convert.ToString(aValue);
                return;
            }
        }
        
        public Articy.Unity.Interfaces.ScriptDataProxy getProp(string aProperty)
        {
            if ((aProperty == "PlayableCharacter"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(PlayableCharacter);
            }
            if ((aProperty == "Background"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Background);
            }
            if ((aProperty == "Motivation"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Motivation);
            }
            if ((aProperty == "Appearance"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Appearance);
            }
            if ((aProperty == "VoiceActor"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(VoiceActor);
            }
            return null;
        }
        #endregion
    }
}
