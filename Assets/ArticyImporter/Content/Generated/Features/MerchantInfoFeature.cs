//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Articy.Dracula_articyXBasics;
using Articy.Unity;
using Articy.Unity.Interfaces;
using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;


namespace Articy.Dracula_articyXBasics.Features
{
    
    
    [Serializable()]
    public class MerchantInfoFeature : IArticyBaseObject, IPropertyProvider
    {
        
        [SerializeField()]
        private Single mCash;
        
        [SerializeField()]
        private Boolean mBuyStuff = new Boolean();
        
        [SerializeField()]
        private ArticyValueArticyModelList mStock = new ArticyValueArticyModelList();
        
        [SerializeField()]
        private UInt64 mOwnerId;
        
        [SerializeField()]
        private UInt32 mOwnerInstanceId;
        
        public Single Cash
        {
            get
            {
                return mCash;
            }
            set
            {
                var oldValue = mCash;
                mCash = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "MerchantInfo.Cash", oldValue, mCash);
            }
        }
        
        public Boolean BuyStuff
        {
            get
            {
                return mBuyStuff;
            }
            set
            {
                var oldValue = mBuyStuff;
                mBuyStuff = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "MerchantInfo.BuyStuff", oldValue, mBuyStuff);
            }
        }
        
        public List<ArticyObject> Stock
        {
            get
            {
                return mStock.GetValue();
            }
            set
            {
                var oldValue = mStock;
                mStock.SetValue(value);
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "MerchantInfo.Stock", oldValue.GetValue(), mStock.GetValue());
            }
        }
        
        public UInt64 OwnerId
        {
            get
            {
                return mOwnerId;
            }
            set
            {
                mOwnerId = value;
            }
        }
        
        public UInt32 OwnerInstanceId
        {
            get
            {
                return mOwnerInstanceId;
            }
            set
            {
                mOwnerInstanceId = value;
            }
        }
        
        private void CloneProperties(object aClone, Articy.Unity.ArticyObject aFirstClassParent)
        {
            Articy.Dracula_articyXBasics.Features.MerchantInfoFeature newClone = ((Articy.Dracula_articyXBasics.Features.MerchantInfoFeature)(aClone));
            newClone.Cash = Cash;
            newClone.BuyStuff = BuyStuff;
            mStock.CustomClone(newClone.mStock);
            newClone.OwnerId = OwnerId;
        }
        
        public object CloneObject(object aParent, Articy.Unity.ArticyObject aFirstClassParent)
        {
            Articy.Dracula_articyXBasics.Features.MerchantInfoFeature clone = new Articy.Dracula_articyXBasics.Features.MerchantInfoFeature();
            CloneProperties(clone, aFirstClassParent);
            return clone;
        }
        
        #region property provider interface
        public void setProp(string aProperty, object aValue)
        {
            if ((aProperty == "Cash"))
            {
                Cash = System.Convert.ToSingle(aValue);
                return;
            }
            if ((aProperty == "BuyStuff"))
            {
                BuyStuff = System.Convert.ToBoolean(aValue);
                return;
            }
            if ((aProperty == "Stock"))
            {
                Stock = ((List<ArticyObject>)(aValue));
                return;
            }
        }
        
        public Articy.Unity.Interfaces.ScriptDataProxy getProp(string aProperty)
        {
            if ((aProperty == "Cash"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Cash);
            }
            if ((aProperty == "BuyStuff"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(BuyStuff);
            }
            if ((aProperty == "Stock"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(Stock);
            }
            return null;
        }
        #endregion
    }
}
