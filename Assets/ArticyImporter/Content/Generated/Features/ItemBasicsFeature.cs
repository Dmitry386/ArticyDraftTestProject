//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Articy.Dracula_articyXBasics;
using Articy.Unity;
using Articy.Unity.Interfaces;
using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;


namespace Articy.Dracula_articyXBasics.Features
{
    
    
    [Serializable()]
    public class ItemBasicsFeature : IArticyBaseObject, IPropertyProvider
    {
        
        [SerializeField()]
        private Boolean mQuestItem = new Boolean();
        
        [SerializeField()]
        private ArticyValueArticyMultiLanguageString mFlavorText = new ArticyValueArticyMultiLanguageString();
        
        [SerializeField()]
        private Int32 mSalesValue;
        
        [SerializeField()]
        private UInt64 mOwnerId;
        
        [SerializeField()]
        private UInt32 mOwnerInstanceId;
        
        public Boolean QuestItem
        {
            get
            {
                return mQuestItem;
            }
            set
            {
                var oldValue = mQuestItem;
                mQuestItem = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "ItemBasics.QuestItem", oldValue, mQuestItem);
            }
        }
        
        public ArticyMultiLanguageString FlavorText
        {
            get
            {
                return mFlavorText.GetValue();
            }
            set
            {
                mFlavorText.SetValue(value);
            }
        }
        
        public Int32 SalesValue
        {
            get
            {
                return mSalesValue;
            }
            set
            {
                var oldValue = mSalesValue;
                mSalesValue = value;
                Articy.Unity.ArticyDatabase.ObjectNotifications.ReportChanged(OwnerId, OwnerInstanceId, "ItemBasics.SalesValue", oldValue, mSalesValue);
            }
        }
        
        public UInt64 OwnerId
        {
            get
            {
                return mOwnerId;
            }
            set
            {
                mOwnerId = value;
            }
        }
        
        public UInt32 OwnerInstanceId
        {
            get
            {
                return mOwnerInstanceId;
            }
            set
            {
                mOwnerInstanceId = value;
            }
        }
        
        private void CloneProperties(object aClone, Articy.Unity.ArticyObject aFirstClassParent)
        {
            Articy.Dracula_articyXBasics.Features.ItemBasicsFeature newClone = ((Articy.Dracula_articyXBasics.Features.ItemBasicsFeature)(aClone));
            newClone.QuestItem = QuestItem;
            if ((mFlavorText != null))
            {
                newClone.mFlavorText = ((ArticyValueArticyMultiLanguageString)(mFlavorText.CloneObject(newClone, aFirstClassParent)));
            }
            newClone.SalesValue = SalesValue;
            newClone.OwnerId = OwnerId;
        }
        
        public object CloneObject(object aParent, Articy.Unity.ArticyObject aFirstClassParent)
        {
            Articy.Dracula_articyXBasics.Features.ItemBasicsFeature clone = new Articy.Dracula_articyXBasics.Features.ItemBasicsFeature();
            CloneProperties(clone, aFirstClassParent);
            return clone;
        }
        
        #region property provider interface
        public void setProp(string aProperty, object aValue)
        {
            if ((aProperty == "QuestItem"))
            {
                QuestItem = System.Convert.ToBoolean(aValue);
                return;
            }
            if ((aProperty == "FlavorText"))
            {
                FlavorText = System.Convert.ToString(aValue);
                return;
            }
            if ((aProperty == "SalesValue"))
            {
                SalesValue = System.Convert.ToInt32(aValue);
                return;
            }
        }
        
        public Articy.Unity.Interfaces.ScriptDataProxy getProp(string aProperty)
        {
            if ((aProperty == "QuestItem"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(QuestItem);
            }
            if ((aProperty == "FlavorText"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(FlavorText);
            }
            if ((aProperty == "SalesValue"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(SalesValue);
            }
            return null;
        }
        #endregion
    }
}
